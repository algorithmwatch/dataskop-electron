name: Publish release

# Build on Linux for Linux, and on macOS for macOS in order to keep precious macOS-usage down (10x more expensive).
# Initially Windows was built on Linux, but Wine caused a lot of problems at some point.

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

jobs:
  publish:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true

      - name: Checkout LFS objects
        shell: bash
        run: git lfs checkout

      - name: Set current version (in tag)
        shell: bash
        run: echo "GITHUB_TAG_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Install Node and NPM
        uses: actions/setup-node@v2
        with:
          node-version: 16
          cache: npm

      - name: Setup NPM auth token for font awesome pro & github packages
        shell: bash
        run: >
          echo "//npm.fontawesome.com/:_authToken=${{ secrets.FONT_AWESOME_TOKEN }}" >> ~/.npmrc &&
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.READ_PACKAGES_TOKEN }}" >> ~/.npmrc

      - name: Install dependencies
        run: npm ci --ignore-scripts

      - name: Setup dotenv files
        shell: bash
        run: >
          echo $GITHUB_TAG_VERSION &&
          if [[ $GITHUB_TAG_VERSION == *"beta"* || $GITHUB_TAG_VERSION == *"alpha"* ]]; then
          echo "PLATFORM_URL=${{ secrets.BETA_PLATFORM_URL }}" >> .env && echo "SERIOUS_PROTECTION=${{ secrets.BETA_SERIOUS_PROTECTION }}" >> .env;
          else echo "PLATFORM_URL=${{ secrets.PLATFORM_URL }}" >> .env && echo "SERIOUS_PROTECTION=${{ secrets.SERIOUS_PROTECTION }}" >> .env; fi &&
          echo "TRACK_EVENTS=${{ secrets.TRACK_EVENTS }}" >> .env &&
          if [[ $GITHUB_TAG_VERSION == *"alpha"* ]]; then echo "UPDATE_FEED_URL=${{ secrets.INTERNAL_UPDATE_FEED_URL }}" >> .env else echo "UPDATE_FEED_URL=${{ secrets.UPDATE_FEED_URL }}" >> .env; fi &&
          if [[ $GITHUB_TAG_VERSION == *"beta"* || $GITHUB_TAG_VERSION == *"alpha"* ]]; then echo "SENTRY_DSN=${{ secrets.SENTRY_DSN }}" >> .env; else echo "SENTRY_DSN=" >> .env; fi

      - name: Make `package.json` internal for alpha releases
        shell: bash
        run: >
          if [[ $GITHUB_TAG_VERSION == *"alpha"* ]]; then
          node ./scripts/make_internal.js ${{ secrets.INTERNAL_BUCKET }} fi

      - name: Publish releases
        shell: bash
        env:
          # macOS code signing
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASS: ${{ secrets.APPLE_ID_PASS }}
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          # Windows code signing
          WIN_CSC_LINK: ${{ secrets.WIN_CSC_LINK }}
          WIN_CSC_KEY_PASSWORD: ${{ secrets.WIN_CSC_KEY_PASSWORD }}

          # Push to S3-compliant Object Storage
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: >
          npm run postinstall &&
          npm run build &&
          npm exec electron-builder -- --publish always

      - name: Notify Keybase channel
        shell: bash
        run: >
          curl -X POST ${{ secrets.KEYBASE_WEBHOOK }} -H 'Content-Type: application/json'
          -d '{"msg": "${{ github.ref_name }} for ${{ runner.os }} has been released."}'

      - name: Archive npm logs
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: npm-logs-publish
          path: ~/.npm/_logs
